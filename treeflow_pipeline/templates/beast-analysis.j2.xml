<?xml version="1.0" encoding="UTF-8" standalone="no"?><beast beautitemplate='Standard' beautistatus='' namespace="beast.core:beast.evolution.alignment:beast.evolution.tree.coalescent:beast.core.util:beast.evolution.nuc:beast.evolution.operators:beast.evolution.sitemodel:beast.evolution.substitutionmodel:beast.evolution.likelihood:beast.evolution.branchratemodel" required="BEAST v2.5.2" version="2.5">

    <data id="alignment" name="alignment">
        {% for taxon_name, sequence in sequence_dict.items() %}<sequence id="Sequence{{ taxon_name }}" taxon="{{ taxon_name }}" totalcount="4" value="{{ sequence }}"/>
        {% endfor %}
        <userDataType id="Nucleotide" spec="beast.evolution.datatype.Nucleotide"/>
    </data>
<map name="Exponential" >beast.math.distributions.Exponential</map>
<map name="LogNormal" >beast.math.distributions.LogNormalDistributionModel</map>
<map name="Normal" >beast.math.distributions.Normal</map>
<map name="Beta" >beast.math.distributions.Beta</map>
<map name="Gamma" >beast.math.distributions.Gamma</map>
<map name="LaplaceDistribution" >beast.math.distributions.LaplaceDistribution</map>
<map name="prior" >beast.math.distributions.Prior</map>
<map name="InverseGamma" >beast.math.distributions.InverseGamma</map>
<map name="OneOnX" >beast.math.distributions.OneOnX</map>


<run id="mcmc" spec="MCMC" chainLength="{{ chain_length }}">
    <state id="state" storeEvery="5000">
        <tree id="tree" name="stateNode">
            <trait id="date_trait" spec="beast.evolution.tree.TraitSet" traitname="date">
                    {{ date_trait_string }}
                <taxa id="TaxonSet.Treeflow" spec="TaxonSet" alignment="@alignment"/>
            </trait>
            <taxonset idref="TaxonSet.Treeflow"/>
        </tree>
        {% for state_tag in state_tags %}{{ state_tag }}
        {% endfor %}
        {% if relaxed %}
            <parameter id="rates"  name="stateNode" lower="0.0">1</parameter>
        {% endif %}
    </state>
    <init spec="beast.util.TreeParser" initial="@tree" taxa="@alignment" IsLabelledNewick="true" newick="{{ newick_string  }}"/>   

    <distribution id="posterior" spec="util.CompoundDistribution">
        <distribution id="prior" spec="util.CompoundDistribution">
            {% for prior_tag in prior_tags %}{{ prior_tag }}
            {% endfor %}
            {{ tree_prior_tag }}
            {{ rate_prior_tag }}
        </distribution>
        <distribution id="likelihood" spec="util.CompoundDistribution" useThreads="true">
            <distribution id="tree_likelihood" spec="ThreadedTreeLikelihood" data="@alignment" tree="@tree">
                {{ site_model_tag }}
                {{ branch_rate_model_tag }}
            </distribution>
        </distribution>
    </distribution>

    <operator id="CoalescentConstantTreeScaler.t:Treeflow" spec="ScaleOperator" scaleFactor="0.5" tree="@tree" weight="3.0"/>
    <operator id="CoalescentConstantTreeRootScaler.t:Treeflow" spec="ScaleOperator" rootOnly="true" scaleFactor="0.5" tree="@tree" weight="3.0"/>
    <operator id="CoalescentConstantUniformOperator.t:Treeflow" spec="Uniform" tree="@tree" weight="30.0"/>
    
    {% if estimate_topology %}
    <operator id="CoalescentConstantSubtreeSlide.t:Treeflow" spec="SubtreeSlide" tree="@tree" weight="15.0"/>
    <operator id="CoalescentConstantNarrow.t:Treeflow" spec="Exchange" tree="@tree" weight="15.0"/>
    <operator id="CoalescentConstantWide.t:Treeflow" spec="Exchange" isNarrow="false" tree="@tree" weight="3.0"/>
    <operator id="CoalescentConstantWilsonBalding.t:Treeflow" spec="WilsonBalding" tree="@tree" weight="3.0"/>
    {% endif %}

    {% for operator_tag in operator_tags %}{{ operator_tag }}
    {% endfor %}

    {% if relaxed %}
    <operator id="RatesRandomWalk.c:Treeflow" spec="RealRandomWalkOperator" parameter="@rates" weight="10" windowSize="1"/>
    <operator id="RatesSwapOperator.c:Treeflow" spec="SwapOperator" parameter="@rates" weight="10"/>
    <operator id="RatesScale.c:Treeflow" spec="ScaleOperator" scaleFactor="0.5" parameter="@rates" weight="10"/>
    {% endif %}

    <logger id="tracelog" fileName="{{ trace_out_path }}" logEvery="{{ log_every }}" model="@posterior" sanitiseHeaders="true" sort="smart">
        <log idref="posterior"/>
        <log idref="likelihood"/>
        <log idref="prior"/>
        <log idref="tree_likelihood"/>
        <log id="TreeHeight.t:Treeflow" spec="beast.evolution.tree.TreeHeightLogger" tree="@tree"/>
        <log id="TreeLength.t:Treeflow" spec="beast.evolution.tree.TreeStatLogger" tree="@tree" logHeight="false" logLength="true"/>
        {% for log_tag in log_tags %}{{ log_tag }}
        {% endfor %}
        {% if relaxed %}
        <log id="RateStatLogger" spec="beast.evolution.branchratemodel.RateStatistic" branchratemodel="@branch_rate_model" tree="@tree"/>
        {% endif %}

        <log spec='ESS' arg="@TreeHeight.t:Treeflow"/>
    </logger>

    <logger id="screenlog" logEvery="{{ log_every }}">
        <log idref="posterior"/>
        <log idref="likelihood"/>
        <log idref="prior"/>
    </logger>

    <logger id="treelog.t:Treeflow" fileName="{{ tree_out_path }}" logEvery="{{ log_every }}" mode="tree">
        <log id="TreeWithMetaDataLogger.t:Treeflow" spec="beast.evolution.tree.TreeWithMetaDataLogger" tree="@tree" {% if relaxed %}branchratemodel="@branch_rate_model"{% endif %}/>
    </logger>

</run>
</beast>
